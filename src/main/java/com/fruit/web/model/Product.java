package com.fruit.web.model;

import com.fruit.web.model.base.BaseProduct;

import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Product extends BaseProduct<Product> {
	public static final Product dao = new Product().dao();
	public static final int STATUS_USE = 1;
	public static final int STATUS_UNUSED = 0;
	public static final int STATUS_DELETE = -1;
	private static final String PRODUCT_LIST_SELECT = "";

	/**
	 * 按照周销量排行，获取N条数据
	 * @return
	 */
	public List<Product> listBuyNum(int pageSize, int pageNum) {
		int start = pageSize * (pageNum - 1) + 1;
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT ? ")
			.append("FROM b_product p JOIN (")
			.append("SELECT * FROM b_product_standard WHERE `status`=? ORDER BY is_default DESC LIMIT 100000000")// 此处的limit防止mysql忽略order by
			.append(") ps ON (p.id = ps.product_id)")
			.append("WHERE p.`status`=? ")
			.append("GROUP BY p.id ")
			.append("ORDER BY p.week_sell_num desc ")
			.append("LIMIT ?,? ");
		return find(sql.toString(), PRODUCT_LIST_SELECT, ProductStandard.STATUS_USE, Product.STATUS_USE, start, pageSize);
	}

	/**
	 * 按照更新时间排序，获取前N条数据
	 * @return
	 */
	public List<Product> listUpdate(int pageSize, int pageNum) {
		int start = pageSize * (pageNum - 1) + 1;
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT ? ")
				.append("FROM b_product p JOIN (")
				.append("SELECT * FROM b_product_standard WHERE `status`=? ORDER BY is_default DESC LIMIT 100000000")// 此处的limit防止mysql忽略order by
				.append(") ps ON (p.id = ps.product_id)")
				.append("WHERE p.`status`=? ")
				.append("GROUP BY p.id ")
				.append("ORDER BY p.update_time desc ")
				.append("LIMIT ?,? ");
		return find(sql.toString(), PRODUCT_LIST_SELECT, ProductStandard.STATUS_USE, Product.STATUS_USE, start, pageSize);
	}

	/**
	 * 按照推荐获取N条数据
	 * @param type
	 * @return
	 */
	public List<Product> listRecommend(int type, int pageSize, int pageNum) {
		int start = pageSize * (pageNum - 1) + 1;
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT ? ")
			.append("FROM b_product p JOIN b_product_recommend pr ON (pr.type=? AND p.id = pr.product_id) ")
			.append("JOIN (")
			.append("SELECT * FROM b_product_standard WHERE `status`=? ORDER BY is_default DESC LIMIT 100000000")
			.append(") ps ON (p.id = ps.product_id) ")
			.append("WHERE p.`status`=? ")
			.append("GROUP BY p.id ")
			.append("ORDER BY p.update_time desc ")
			.append("LIMIT ?,? ");
		return find(sql.toString(), PRODUCT_LIST_SELECT, type, ProductStandard.STATUS_USE, Product.STATUS_USE, start, pageSize);
	}

	/**
	 * 按照关键字获取前N条数据
	 * @param keyword
	 * @return
	 */
	public List<Product> listSearch(String keyword, int pageSize, int pageNum) {
		int start = pageSize * (pageNum - 1) + 1;
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT ? ")
			.append("FROM b_product p JOIN b_product_keyword pk ON (pk.keyword=? AND p.id = pk.product_id) ")
			.append("JOIN (")
			.append("SELECT * FROM b_product_standard WHERE `status`=? ORDER BY is_default DESC LIMIT 100000000")
			.append(") ps ON (p.id = ps.product_id) ")
			.append("WHERE p.`status`=? ")
			.append("GROUP BY p.id ")
			.append("ORDER BY p.update_time DESC ")
			.append("LIMIT ?,? ");
		return find(sql.toString(), PRODUCT_LIST_SELECT, keyword, ProductStandard.STATUS_USE, Product.STATUS_USE, start, pageSize);
	}
}
